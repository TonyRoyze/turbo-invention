---
import Layout from "../layouts/Layout.astro";

const response = await fetch(
	"https://opensheet.elk.sh/1Wjyj120-bA2ogVDcebhr0PLlLtRhupBe65cjZfgmOf4/1",
);
const data = await response.json();

import type { APIRoute } from "astro";
export const GET: APIRoute = (data) => {
	return new Response(
		JSON.stringify({
			message: "This was a GET!",
		}),
	);
};

// No product found
if (!data) {
	return {
		status: 404,
	};
}

// Sort data by score in descending order
const sortedData = [...data].sort(
	(a, b) => parseInt(b.Score) - parseInt(a.Score),
);

// Function to create segments array for the progress bar
function createSegments(score: number) {
	const totalSegments = 10; // 10 segments for 100%
	const filledSegments = Math.floor(score / (100 / totalSegments));
	return Array(totalSegments)
		.fill(0)
		.map((_, i) => i < filledSegments);
}
---

<Layout title="Student Performance Dashboard">
	<main>
		<h1>Student Performance Dashboard</h1>
		<div class="score-table">
			<div class="table-header">
				<div class="name-col">Student Name</div>
				<div class="score-col">Score</div>
			</div>
			{
				sortedData.map((item, index) => {
					const score = parseInt(item.Score);
					let rowClass = "table-row";
					const segments = createSegments(score);

					// Special treatment for top performers
					if (index === 0) rowClass += " first-place";
					if (index === 1) rowClass += " second-place";
					if (index === 2) rowClass += " third-place";

					return (
						<div class={rowClass}>
							<div class="name-col">{item.Name}</div>
							<div class="score-col">
								<div class="segmented-bar">
									{segments.map((isFilled, i) => (
										<div
											class={`segment ${isFilled ? "filled" : ""} ${
												index === 0
													? "gold-segment"
													: ""
											}`}
										/>
									))}
								</div>
								<span class="score-text">{item.Score}</span>
							</div>
						</div>
					);
				})
			}
		</div>
	</main>
</Layout>

<script>
	// Add hover effect to rows
	document.addEventListener("DOMContentLoaded", () => {
		const rows = document.querySelectorAll(".table-row");
		rows.forEach((row) => {
			row.addEventListener("mouseenter", () => {
				row.classList.add("highlight");
			});
			row.addEventListener("mouseleave", () => {
				row.classList.remove("highlight");
			});
		});
	});
</script>

<style>
	:root {
		/* Dark mode theme - unchanged */
		--primary: #1a73e7;
		--primary-content: #ffffff;
		--primary-dark: #145cba;
		--primary-light: #488fec;

		--secondary: #e7d21a;
		--secondary-content: #020200;
		--secondary-dark: #baa914;
		--secondary-light: #ecdb48;

		--background: #1a1a1a;
		--foreground: #262626;
		--border: #404040;

		--copy: #fbfbfb;
		--copy-light: #d9d9d9;
		--copy-lighter: #a6a6a6;

		--success: #1ae71a;
		--warning: #e7e71a;
		--error: #e71a1a;
		--success-content: #000200;
		--warning-content: #020200;
		--error-content: #ffffff;

		/* Derived variables for components */
		--segment-empty: #333333;
		--segment-filled: var(--primary);
		--segment-gold: var(--secondary);
	}

	main {
		margin: auto;
		padding: 2rem;
		width: 800px;
		max-width: calc(100% - 2rem);
		color: var(--copy);
		font-size: 16px;
		line-height: 1.6;
		background-color: var(--background);
		font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
		min-height: 100vh;
	}

	h1 {
		text-align: center;
		margin-bottom: 2rem;
		color: var(--primary);
		font-size: 2rem;
		font-weight: 600;
		letter-spacing: 0.5px;
		text-shadow: 0 0 10px rgba(26, 115, 231, 0.3);
	}

	.score-table {
		border-radius: 1rem;
		overflow: hidden;
		background: var(--foreground);
		position: relative;
	}

	/* .score-table::before {
		content: "";
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: linear-gradient(
			45deg,
			transparent 40%,
			rgba(26, 115, 231, 0.1) 45%,
			rgba(26, 115, 231, 0.1) 55%,
			transparent 60%
		); 
		pointer-events: none;
	} */

	.table-header {
		display: flex;
		background: var(--primary);
		color: var(--primary-content);
		font-weight: 600;
		padding: 1.2rem 1.5rem;
		letter-spacing: 0.5px;
		border-bottom: 2px solid var(--primary-dark);
		position: relative;
		overflow: hidden;
	}

	.table-header::after {
		content: "";
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		height: 2px;
		background: linear-gradient(
			90deg,
			var(--primary-light),
			var(--primary-content),
			var(--primary-light)
		);
	}

	.table-row {
		display: flex;
		padding: 1rem 1.5rem;
		border-bottom: 1px solid var(--border);
		transition: all 0.3s ease;
		position: relative;
	}

	.table-row:last-child {
		border-bottom: none;
	}

	.table-row::before {
		content: "";
		position: absolute;
		left: 0;
		top: 0;
		bottom: 0;
		width: 2px;
		background: transparent;
		transition: all 0.3s ease;
	}

	.name-col {
		flex: 2;
		display: flex;
		align-items: center;
		font-weight: 500;
		color: var(--copy);
		position: relative;
	}

	.score-col {
		flex: 1;
		position: relative;
		display: flex;
		align-items: center;
		border-left: 1px dotted var(--border);
		padding-left: 15px;
	}

	/* Segmented progress bar styles */
	.segmented-bar {
		display: flex;
		width: 70%;
		height: 16px;
		gap: 3px;
		align-items: center;
		padding: 2px;
		background: rgba(0, 0, 0, 0.15);
		border-radius: 3px;
		border: 1px solid var(--border);
	}

	.segment {
		flex: 1;
		height: 100%;
		background-color: var(--segment-empty);
		border-radius: 2px;
		transition:
			background-color 0.3s ease,
			transform 0.2s ease;
		position: relative;
	}

	.segment.filled {
		background-color: var(--segment-filled);
		box-shadow:
			0 0 5px rgba(26, 115, 231, 0.5),
			inset 0 -2px 0 rgba(0, 0, 0, 0.2);
	}

	.gold-segment.filled {
		background-color: var(--segment-gold);
		box-shadow:
			0 0 5px rgba(231, 210, 26, 0.5),
			inset 0 -2px 0 rgba(0, 0, 0, 0.2);
	}

	.score-text {
		position: relative;
		z-index: 1;
		margin-left: 15px;
		font-weight: 600;
		color: var(--copy);
		background: rgba(0, 0, 0, 0.15);
		padding: 2px 8px;
		border-radius: 3px;
		border: none;
	}

	/* Special styling for top performers */
	.first-place {
		background-color: rgba(231, 210, 26, 0.1);
		border-left: none;
	}

	.first-place::before {
		background: var(--secondary);
		box-shadow: 0 0 10px var(--secondary);
	}

	/* Removed the .first-place .name-col::before selector that was adding the star icon */

	.second-place::before {
		background: var(--primary-light);
		box-shadow: 0 0 5px var(--primary-light);
	}

	/* Removed the .second-place .name-col::before selector that was adding the star icon */

	.third-place::before {
		background: var(--primary-dark);
		box-shadow: 0 0 5px var(--primary-dark);
	}

	/* Removed the .third-place .name-col::before selector that was adding the star icon */

	/* Hover effect */
	.highlight {
		background-color: rgba(26, 115, 231, 0.15);
		transform: translateX(5px);
	}

	.highlight .segment.filled {
		transform: scaleY(1.2);
	}

	.highlight .score-text {
		background: rgba(26, 115, 231, 0.2);
	}

	/* Responsive adjustments */
	@media (max-width: 768px) {
		main {
			padding: 1rem;
			width: 100%;
		}

		.segmented-bar {
			width: 60%;
		}

		.score-table {
			clip-path: polygon(
				0% 10px,
				10px 0%,
				calc(100% - 10px) 0%,
				100% 10px,
				100% calc(100% - 10px),
				calc(100% - 10px) 100%,
				10px 100%,
				0% calc(100% - 10px)
			);
		}
	}

	/* Apply theme to the entire page */
	:global(body) {
		background-color: var(--background);
		margin: 0;
		padding: 0;
	}
</style>
